# -*- coding: utf-8 -*-
"""Audio Generator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/117GWLwbz-IBBVLA4xyDk8kOIb2ds_3jk
"""

!pip install PyPDF2 gTTS
import os
from PyPDF2 import PdfReader
from gtts import gTTS
from IPython.display import Audio, display
from google.colab import files, drive
from tqdm import tqdm
import logging

# Set up logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# Function to read text from PDF
def read_pdf(file_path):
    try:
        reader = PdfReader(file_path)
        text = ""
        for page in tqdm(reader.pages, desc="Reading PDF"):
            text += page.extract_text() + "\n"
        return text
    except Exception as e:
        logging.error(f"Error reading PDF: {e}")
        return None

# Function to convert text to speech
def text_to_speech(text, output_file, lang='hi'):
    try:
        tts = gTTS(text=text, lang=lang)
        tts.save(output_file)
        logging.info(f"Audio content written to file {output_file}")
    except Exception as e:
        logging.error(f"Error converting text to speech: {e}")

# Function to play audio in Colab
def play_audio(file_path):
    return Audio(file_path, autoplay=True)

# Function to save file to Google Drive
def save_to_drive(file_path):
    try:
        drive.mount('/content/drive')
        drive_path = '/content/drive/MyDrive/'
        os.makedirs(drive_path, exist_ok=True)
        destination_path = os.path.join(drive_path, os.path.basename(file_path))
        os.rename(file_path, destination_path)
        logging.info(f"File saved to Google Drive: {destination_path}")
    except Exception as e:
        logging.error(f"Error saving file to Google Drive: {e}")

# Main function to generate audiobook
def generate_audiobook(pdf_path, audio_path, lang='hi', save_to_drive=False):
    logging.info("Reading PDF...")
    text = read_pdf(pdf_path)
    if text is None:
        return None

    logging.info("Converting text to speech...")
    text_to_speech(text, audio_path, lang)

    logging.info("Playing audio...")
    audio = play_audio(audio_path)
    display(audio)

    if save_to_drive:
        logging.info("Saving audio to Google Drive...")
        save_to_drive(audio_path)

# Example usage
print("Please upload your PDF file(s):")
uploaded = files.upload()

# Get the uploaded file names
pdf_paths = list(uploaded.keys())

# Get user input for language and save option
print("Supported languages: en (English), hi (Hindi), es (Spanish), fr (French), etc.")
lang = input("Enter language code (e.g., 'en' for English, 'hi' for Hindi): ")
save_to_drive = input("Do you want to save the audio to Google Drive? (yes/no): ").strip().lower() == 'yes'

# Process each PDF
for pdf_path in pdf_paths:
    audio_path = f"{os.path.splitext(pdf_path)[0]}_audiobook.mp3"
    generate_audiobook(pdf_path, audio_path, lang, save_to_drive)